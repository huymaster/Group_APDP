@using X.PagedList.Mvc.Core
@model X.PagedList.IPagedList<Course>

@{
    ViewData["Title"] = "Courses";
}

<h2>@ViewData["Title"]</h2>

<ul class="list-group">
    @if (Model.Count == 0)
    {
        <p class="text-muted">No courses found.</p>
    }
    else
    {
        @foreach (var course in Model)
        {
            <li class="list-group m-1">
                @await Html.PartialAsync("_CourseCard", course)
            </li>
        }
    }
</ul>

@Html.PagedListPager(Model, page => Url.Action("Index", "Courses", new { page }), new PagedListRenderOptions
{
    LiElementClasses = ["page-item m-1"],
    PageClasses = ["page-link"],
    DisplayLinkToFirstPage = PagedListDisplayMode.Always,
    DisplayLinkToLastPage = PagedListDisplayMode.Always,
    DisplayLinkToNextPage = PagedListDisplayMode.Always,
    DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
    Display = PagedListDisplayMode.IfNeeded,
    ContainerDivClasses = ["pagination justify-content-center"],
    UlElementClasses = ["pagination", "justify-content-center", "mt-3"],
    MaximumPageNumbersToDisplay = 5
})